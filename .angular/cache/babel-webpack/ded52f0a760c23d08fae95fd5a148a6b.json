{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Peppah/source/repos/Csgo-skins API/Csgo-skins API/CSGO-skins/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\nlet RiflesComponent = class RiflesComponent {\n  constructor(router, weaponService, ref) {\n    this.router = router;\n    this.weaponService = weaponService;\n    this.ref = ref;\n    this.rifles = [\"ak47\", \"aug\", \"awp\", \"famas\", \"G3SG1\", \"m4a1s\", \"m4a4\", \"scar20\", \"sg553\", \"ssg\"];\n    this.faLongArrowAltLeft = faLongArrowAltLeft;\n    this.greenAlert = '';\n  }\n\n  ngOnInit() {}\n\n  loadWeaponSkins(weapon) {\n    this.router.navigate(['rifles/' + weapon]);\n    this.weaponService.loadWeaponData(weapon).then(data => {\n      this.weaponSkins = data;\n    });\n  }\n\n  selectedSkin(weapon, skinid) {\n    var _this = this;\n\n    this.weaponService.selectWeaponSkin(weapon, skinid).then(resCode => {\n      if (resCode == 200) {\n        this.greenAlert = \"Successfully updated your skin.\";\n\n        /*#__PURE__*/\n        _asyncToGenerator(function* () {\n          yield new Promise(f => setTimeout(f, 1000)).then(() => {\n            _this.greenAlert = \"\";\n          });\n        });\n      }\n    });\n  }\n\n};\nRiflesComponent = __decorate([Component({\n  selector: 'app-rifles',\n  templateUrl: './rifles.component.html',\n  styleUrls: ['./rifles.component.css']\n})], RiflesComponent);\nexport { RiflesComponent };","map":{"version":3,"sources":["C:/Users/Peppah/source/repos/Csgo-skins API/Csgo-skins API/CSGO-skins/src/app/weapons/rifles/rifles.component.ts"],"names":["__decorate","Component","faLongArrowAltLeft","RiflesComponent","constructor","router","weaponService","ref","rifles","greenAlert","ngOnInit","loadWeaponSkins","weapon","navigate","loadWeaponData","then","data","weaponSkins","selectedSkin","skinid","selectWeaponSkin","resCode","Promise","f","setTimeout","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAN,CAAsB;AACxCC,EAAAA,WAAW,CAACC,MAAD,EAASC,aAAT,EAAwBC,GAAxB,EAA6B;AACpC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,MAAL,GAAc,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,MAAlD,EAA0D,QAA1D,EAAoE,OAApE,EAA6E,KAA7E,CAAd;AACA,SAAKN,kBAAL,GAA0BA,kBAA1B;AACA,SAAKO,UAAL,GAAkB,EAAlB;AACH;;AACDC,EAAAA,QAAQ,GAAG,CAAG;;AACdC,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpB,SAAKP,MAAL,CAAYQ,QAAZ,CAAqB,CAAC,YAAYD,MAAb,CAArB;AACA,SAAKN,aAAL,CAAmBQ,cAAnB,CAAkCF,MAAlC,EAA0CG,IAA1C,CAAgDC,IAAD,IAAU;AACrD,WAAKC,WAAL,GAAmBD,IAAnB;AACH,KAFD;AAGH;;AACDE,EAAAA,YAAY,CAACN,MAAD,EAASO,MAAT,EAAiB;AAAA;;AACzB,SAAKb,aAAL,CAAmBc,gBAAnB,CAAoCR,MAApC,EAA4CO,MAA5C,EAAoDJ,IAApD,CAA0DM,OAAD,IAAa;AAClE,UAAIA,OAAO,IAAI,GAAf,EAAoB;AAChB,aAAKZ,UAAL,GAAkB,iCAAlB;;AACA;AAAA,0BAAC,aAAY;AACT,gBAAM,IAAIa,OAAJ,CAAYC,CAAC,IAAIC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA3B,EAAsCR,IAAtC,CAA2C,MAAM;AAAE,YAAA,KAAI,CAACN,UAAL,GAAkB,EAAlB;AAAuB,WAA1E,CAAN;AACH,SAFD;AAGH;AACJ,KAPD;AAQH;;AAzBuC,CAA5C;AA2BAN,eAAe,GAAGH,UAAU,CAAC,CACzBC,SAAS,CAAC;AACNwB,EAAAA,QAAQ,EAAE,YADJ;AAENC,EAAAA,WAAW,EAAE,yBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,wBAAD;AAHL,CAAD,CADgB,CAAD,EAMzBxB,eANyB,CAA5B;AAOA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons';\r\nlet RiflesComponent = class RiflesComponent {\r\n    constructor(router, weaponService, ref) {\r\n        this.router = router;\r\n        this.weaponService = weaponService;\r\n        this.ref = ref;\r\n        this.rifles = [\"ak47\", \"aug\", \"awp\", \"famas\", \"G3SG1\", \"m4a1s\", \"m4a4\", \"scar20\", \"sg553\", \"ssg\"];\r\n        this.faLongArrowAltLeft = faLongArrowAltLeft;\r\n        this.greenAlert = '';\r\n    }\r\n    ngOnInit() { }\r\n    loadWeaponSkins(weapon) {\r\n        this.router.navigate(['rifles/' + weapon]);\r\n        this.weaponService.loadWeaponData(weapon).then((data) => {\r\n            this.weaponSkins = data;\r\n        });\r\n    }\r\n    selectedSkin(weapon, skinid) {\r\n        this.weaponService.selectWeaponSkin(weapon, skinid).then((resCode) => {\r\n            if (resCode == 200) {\r\n                this.greenAlert = \"Successfully updated your skin.\";\r\n                (async () => {\r\n                    await new Promise(f => setTimeout(f, 1000)).then(() => { this.greenAlert = \"\"; });\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\nRiflesComponent = __decorate([\r\n    Component({\r\n        selector: 'app-rifles',\r\n        templateUrl: './rifles.component.html',\r\n        styleUrls: ['./rifles.component.css']\r\n    })\r\n], RiflesComponent);\r\nexport { RiflesComponent };\r\n"]},"metadata":{},"sourceType":"module"}